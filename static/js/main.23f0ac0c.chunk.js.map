{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","map","p","Pagination","goToNextPage","goToPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACrC,OACC,8BACEA,EAAQC,KAAI,SAAAC,GAAC,OACb,8BAAcA,GAAJA,Q,oBCJC,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAClD,OACC,gCACEA,GAAgB,wBAAQC,QAASD,EAAjB,sBAChBD,GAAgB,wBAAQE,QAASF,EAAjB,qBC6CLG,MA9Cf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAA4CD,mBAAS,qCAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KACA,EAAsCH,qBAAtC,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAsCL,qBAAtC,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KA0BA,OAvBAC,qBAAU,WAER,IAAIC,EAUJ,OAXAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CACxBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAChDC,MAAK,SAAAC,GACNT,GAAW,GACXJ,EAAea,EAAIC,KAAKC,MACxBb,EAAeW,EAAIC,KAAKE,UACxBpB,EAAWiB,EAAIC,KAAKG,QAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,YAGlC,kBAAMZ,OACZ,CAACT,IAUAM,EAAgB,aAKlB,qCACE,cAACjB,EAAD,CAAaC,QAASA,IACtB,cAACG,EAAD,CACEC,aAAcQ,EAhBpB,WACED,EAAkBC,IAe6B,KAC3CP,aAAcS,EAbpB,WACEH,EAAkBG,IAY6B,WCzCnDkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23f0ac0c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n return (\r\n  <div>\r\n   {pokemon.map(p => (\r\n    <div key={p}>{p}</div>\r\n   ))}\r\n\r\n  </div>\r\n )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({ goToNextPage, goToPrevPage }) {\r\n return (\r\n  <div>\r\n   {goToPrevPage && <button onClick={goToPrevPage}>Previous</button>}\r\n   {goToNextPage && <button onClick={goToNextPage}>Next</button>}\r\n\r\n\r\n  </div>\r\n )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport PokemonList from './PokemonList';\nimport axios from 'axios';\nimport Pagination from './Pagination';\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon\");\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  const [loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel\n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false)\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n      setPokemon(res.data.results.map(p => p.name))\n    })\n\n    return () => cancel()\n  }, [currentPageUrl])\n\n  function goToNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function goToPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }\n\n  if (loading) return \"Loading...\"\n\n\n\n  return (\n    <>\n      <PokemonList pokemon={pokemon} />\n      <Pagination\n        goToNextPage={nextPageUrl ? goToNextPage : null}\n        goToPrevPage={prevPageUrl ? goToPrevPage : null}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}